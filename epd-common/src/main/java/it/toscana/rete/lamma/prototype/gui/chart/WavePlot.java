package it.toscana.rete.lamma.prototype.gui.chart;

import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.renderer.PolarItemRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYZDataset;

public class WavePlot extends PolarPlot {
    /**
     * Returns the plot type as a string.
     *
     * @return A short string describing the type of plot.
     */
    @Override
    public String getPlotType() {
        return PolarPlot.localizationResources.getString("Wave_Plot");
    }
    /**
     * Returns the legend items for the plot.  Each legend item is generated by
     * the plot's m_Renderer, since the m_Renderer is responsible for the visual
     * representation of the data.
     *
     * @return The legend items.
     */
    @Override
    public LegendItemCollection getLegendItems() {
        LegendItemCollection result = new LegendItemCollection();
        int count = getDatasetCount();
        for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {
            XYZDataset dataset = (XYZDataset) getDataset(datasetIndex);

            WaveChartPolarRenderer renderer = (WaveChartPolarRenderer) getRenderer(datasetIndex);
            if (dataset != null && renderer != null) {
                int seriesCount = dataset.getSeriesCount();
                for (int i = 0; i < seriesCount; i++) {
                    double height = 0;
                    try{
                        height = dataset.getZValue(i,0);
                    }catch(ArrayIndexOutOfBoundsException e) {

                    }finally {
                        LegendItem item = renderer.getLegendItem(i, height);
                        result.add(item);
                    }

                }
            }
        }
        LegendItemCollection orderedResult = new LegendItemCollection();
        if(result.getItemCount() > 0) {
            orderedResult.add(result.get(0));
            for(int ii = result.getItemCount() -1; ii > 0; ii--) {
                orderedResult.add(result.get(ii));
            }
        }
        return orderedResult;
    }
}
